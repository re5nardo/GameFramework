// automatically generated by the FlatBuffers compiler, do not modify

namespace FBS.Data
{

using System;
using FlatBuffers;

public sealed class CharacterStatus : Struct {
  public CharacterStatus __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int MaximumHP { get { return bb.GetInt(bb_pos + 0); } }
  public int HP { get { return bb.GetInt(bb_pos + 4); } }
  public int MaximumMP { get { return bb.GetInt(bb_pos + 8); } }
  public int MP { get { return bb.GetInt(bb_pos + 12); } }
  public float MaximumSpeed { get { return bb.GetFloat(bb_pos + 16); } }
  public float Speed { get { return bb.GetFloat(bb_pos + 20); } }
  public float MPChargeRate { get { return bb.GetFloat(bb_pos + 24); } }
  public float MovePoint { get { return bb.GetFloat(bb_pos + 28); } }

  public static Offset<CharacterStatus> CreateCharacterStatus(FlatBufferBuilder builder, int MaximumHP, int HP, int MaximumMP, int MP, float MaximumSpeed, float Speed, float MPChargeRate, float MovePoint) {
    builder.Prep(4, 32);
    builder.PutFloat(MovePoint);
    builder.PutFloat(MPChargeRate);
    builder.PutFloat(Speed);
    builder.PutFloat(MaximumSpeed);
    builder.PutInt(MP);
    builder.PutInt(MaximumMP);
    builder.PutInt(HP);
    builder.PutInt(MaximumHP);
    return new Offset<CharacterStatus>(builder.Offset);
  }
};


}
