// automatically generated by the FlatBuffers compiler, do not modify

namespace FBS
{

using System;
using FlatBuffers;

public sealed class EntityState : Table {
  public static EntityState GetRootAsEntityState(ByteBuffer _bb) { return GetRootAsEntityState(_bb, new EntityState()); }
  public static EntityState GetRootAsEntityState(ByteBuffer _bb, EntityState obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public EntityState __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int PlayerIndex { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public FBS.Data.Vector3 Position { get { return GetPosition(new FBS.Data.Vector3()); } }
  public FBS.Data.Vector3 GetPosition(FBS.Data.Vector3 obj) { int o = __offset(6); return o != 0 ? obj.__init(o + bb_pos, bb) : null; }
  public FBS.Data.Vector3 Rotation { get { return GetRotation(new FBS.Data.Vector3()); } }
  public FBS.Data.Vector3 GetRotation(FBS.Data.Vector3 obj) { int o = __offset(8); return o != 0 ? obj.__init(o + bb_pos, bb) : null; }
  public int GetBehaviorsMapKey(int j) { int o = __offset(10); return o != 0 ? bb.GetInt(__vector(o) + j * 4) : (int)0; }
  public int BehaviorsMapKeyLength { get { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBehaviorsMapKeyBytes() { return __vector_as_arraysegment(10); }
  public float GetBehaviorsMapValue(int j) { int o = __offset(12); return o != 0 ? bb.GetFloat(__vector(o) + j * 4) : (float)0; }
  public int BehaviorsMapValueLength { get { int o = __offset(12); return o != 0 ? __vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBehaviorsMapValueBytes() { return __vector_as_arraysegment(12); }

  public static void StartEntityState(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddPlayerIndex(FlatBufferBuilder builder, int PlayerIndex) { builder.AddInt(0, PlayerIndex, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<FBS.Data.Vector3> PositionOffset) { builder.AddStruct(1, PositionOffset.Value, 0); }
  public static void AddRotation(FlatBufferBuilder builder, Offset<FBS.Data.Vector3> RotationOffset) { builder.AddStruct(2, RotationOffset.Value, 0); }
  public static void AddBehaviorsMapKey(FlatBufferBuilder builder, VectorOffset BehaviorsMapKeyOffset) { builder.AddOffset(3, BehaviorsMapKeyOffset.Value, 0); }
  public static VectorOffset CreateBehaviorsMapKeyVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartBehaviorsMapKeyVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBehaviorsMapValue(FlatBufferBuilder builder, VectorOffset BehaviorsMapValueOffset) { builder.AddOffset(4, BehaviorsMapValueOffset.Value, 0); }
  public static VectorOffset CreateBehaviorsMapValueVector(FlatBufferBuilder builder, float[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddFloat(data[i]); return builder.EndVector(); }
  public static void StartBehaviorsMapValueVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<EntityState> EndEntityState(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EntityState>(o);
  }
};


}
