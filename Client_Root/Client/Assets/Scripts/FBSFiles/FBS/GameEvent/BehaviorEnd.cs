// automatically generated by the FlatBuffers compiler, do not modify

namespace FBS.GameEvent
{

using System;
using FlatBuffers;

public sealed class BehaviorEnd : Table {
  public static BehaviorEnd GetRootAsBehaviorEnd(ByteBuffer _bb) { return GetRootAsBehaviorEnd(_bb, new BehaviorEnd()); }
  public static BehaviorEnd GetRootAsBehaviorEnd(ByteBuffer _bb, BehaviorEnd obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public BehaviorEnd __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int EntityID { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public float EndTime { get { int o = __offset(6); return o != 0 ? bb.GetFloat(o + bb_pos) : (float)0.0f; } }
  public int BehaviorID { get { int o = __offset(8); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<BehaviorEnd> CreateBehaviorEnd(FlatBufferBuilder builder,
      int EntityID = 0,
      float EndTime = 0.0f,
      int BehaviorID = 0) {
    builder.StartObject(3);
    BehaviorEnd.AddBehaviorID(builder, BehaviorID);
    BehaviorEnd.AddEndTime(builder, EndTime);
    BehaviorEnd.AddEntityID(builder, EntityID);
    return BehaviorEnd.EndBehaviorEnd(builder);
  }

  public static void StartBehaviorEnd(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddEntityID(FlatBufferBuilder builder, int EntityID) { builder.AddInt(0, EntityID, 0); }
  public static void AddEndTime(FlatBufferBuilder builder, float EndTime) { builder.AddFloat(1, EndTime, 0.0f); }
  public static void AddBehaviorID(FlatBufferBuilder builder, int BehaviorID) { builder.AddInt(2, BehaviorID, 0); }
  public static Offset<BehaviorEnd> EndBehaviorEnd(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BehaviorEnd>(o);
  }
};


}
