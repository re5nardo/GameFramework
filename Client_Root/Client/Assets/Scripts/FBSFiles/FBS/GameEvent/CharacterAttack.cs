// automatically generated by the FlatBuffers compiler, do not modify

namespace FBS.GameEvent
{

using System;
using FlatBuffers;

public sealed class CharacterAttack : Table {
  public static CharacterAttack GetRootAsCharacterAttack(ByteBuffer _bb) { return GetRootAsCharacterAttack(_bb, new CharacterAttack()); }
  public static CharacterAttack GetRootAsCharacterAttack(ByteBuffer _bb, CharacterAttack obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public CharacterAttack __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int AttackingEntityID { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int AttackedEntityID { get { int o = __offset(6); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int Damage { get { int o = __offset(8); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<CharacterAttack> CreateCharacterAttack(FlatBufferBuilder builder,
      int AttackingEntityID = 0,
      int AttackedEntityID = 0,
      int Damage = 0) {
    builder.StartObject(3);
    CharacterAttack.AddDamage(builder, Damage);
    CharacterAttack.AddAttackedEntityID(builder, AttackedEntityID);
    CharacterAttack.AddAttackingEntityID(builder, AttackingEntityID);
    return CharacterAttack.EndCharacterAttack(builder);
  }

  public static void StartCharacterAttack(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddAttackingEntityID(FlatBufferBuilder builder, int AttackingEntityID) { builder.AddInt(0, AttackingEntityID, 0); }
  public static void AddAttackedEntityID(FlatBufferBuilder builder, int AttackedEntityID) { builder.AddInt(1, AttackedEntityID, 0); }
  public static void AddDamage(FlatBufferBuilder builder, int Damage) { builder.AddInt(2, Damage, 0); }
  public static Offset<CharacterAttack> EndCharacterAttack(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CharacterAttack>(o);
  }
};


}
