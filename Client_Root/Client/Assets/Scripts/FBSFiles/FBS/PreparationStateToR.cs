// automatically generated by the FlatBuffers compiler, do not modify

namespace FBS
{

using System;
using FlatBuffers;

public sealed class PreparationStateToR : Table {
  public static PreparationStateToR GetRootAsPreparationStateToR(ByteBuffer _bb) { return GetRootAsPreparationStateToR(_bb, new PreparationStateToR()); }
  public static PreparationStateToR GetRootAsPreparationStateToR(ByteBuffer _bb, PreparationStateToR obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public PreparationStateToR __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public float State { get { int o = __offset(4); return o != 0 ? bb.GetFloat(o + bb_pos) : (float)0.0f; } }

  public static Offset<PreparationStateToR> CreatePreparationStateToR(FlatBufferBuilder builder,
      float State = 0.0f) {
    builder.StartObject(1);
    PreparationStateToR.AddState(builder, State);
    return PreparationStateToR.EndPreparationStateToR(builder);
  }

  public static void StartPreparationStateToR(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddState(FlatBufferBuilder builder, float State) { builder.AddFloat(0, State, 0.0f); }
  public static Offset<PreparationStateToR> EndPreparationStateToR(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PreparationStateToR>(o);
  }
};


}
