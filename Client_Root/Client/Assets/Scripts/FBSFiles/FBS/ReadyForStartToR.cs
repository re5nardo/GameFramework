// automatically generated by the FlatBuffers compiler, do not modify

namespace FBS
{

using System;
using FlatBuffers;

public sealed class ReadyForStartToR : Table {
  public static ReadyForStartToR GetRootAsReadyForStartToR(ByteBuffer _bb) { return GetRootAsReadyForStartToR(_bb, new ReadyForStartToR()); }
  public static ReadyForStartToR GetRootAsReadyForStartToR(ByteBuffer _bb, ReadyForStartToR obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ReadyForStartToR __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int PlayerIndex { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<ReadyForStartToR> CreateReadyForStartToR(FlatBufferBuilder builder,
      int PlayerIndex = 0) {
    builder.StartObject(1);
    ReadyForStartToR.AddPlayerIndex(builder, PlayerIndex);
    return ReadyForStartToR.EndReadyForStartToR(builder);
  }

  public static void StartReadyForStartToR(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddPlayerIndex(FlatBufferBuilder builder, int PlayerIndex) { builder.AddInt(0, PlayerIndex, 0); }
  public static Offset<ReadyForStartToR> EndReadyForStartToR(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReadyForStartToR>(o);
  }
};


}
