// automatically generated by the FlatBuffers compiler, do not modify

namespace FBS
{

using System;
using FlatBuffers;

public sealed class SelectNormalGameToC : Table {
  public static SelectNormalGameToC GetRootAsSelectNormalGameToC(ByteBuffer _bb) { return GetRootAsSelectNormalGameToC(_bb, new SelectNormalGameToC()); }
  public static SelectNormalGameToC GetRootAsSelectNormalGameToC(ByteBuffer _bb, SelectNormalGameToC obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public SelectNormalGameToC __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int Result { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public int ExpectedTime { get { int o = __offset(6); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }

  public static Offset<SelectNormalGameToC> CreateSelectNormalGameToC(FlatBufferBuilder builder,
      int Result = 0,
      int ExpectedTime = 0) {
    builder.StartObject(2);
    SelectNormalGameToC.AddExpectedTime(builder, ExpectedTime);
    SelectNormalGameToC.AddResult(builder, Result);
    return SelectNormalGameToC.EndSelectNormalGameToC(builder);
  }

  public static void StartSelectNormalGameToC(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddResult(FlatBufferBuilder builder, int Result) { builder.AddInt(0, Result, 0); }
  public static void AddExpectedTime(FlatBufferBuilder builder, int ExpectedTime) { builder.AddInt(1, ExpectedTime, 0); }
  public static Offset<SelectNormalGameToC> EndSelectNormalGameToC(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SelectNormalGameToC>(o);
  }
};


}
