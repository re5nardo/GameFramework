// automatically generated by the FlatBuffers compiler, do not modify

namespace FBS
{

using System;
using FlatBuffers;

public sealed class TickInfoToC : Table {
  public static TickInfoToC GetRootAsTickInfoToC(ByteBuffer _bb) { return GetRootAsTickInfoToC(_bb, new TickInfoToC()); }
  public static TickInfoToC GetRootAsTickInfoToC(ByteBuffer _bb, TickInfoToC obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public TickInfoToC __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int Tick { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public FBS.PlayerInputData GetPlayerInputs(int j) { return GetPlayerInputs(new FBS.PlayerInputData(), j); }
  public FBS.PlayerInputData GetPlayerInputs(FBS.PlayerInputData obj, int j) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
  public int PlayerInputsLength { get { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; } }

  public static Offset<TickInfoToC> CreateTickInfoToC(FlatBufferBuilder builder,
      int Tick = 0,
      VectorOffset PlayerInputsOffset = default(VectorOffset)) {
    builder.StartObject(2);
    TickInfoToC.AddPlayerInputs(builder, PlayerInputsOffset);
    TickInfoToC.AddTick(builder, Tick);
    return TickInfoToC.EndTickInfoToC(builder);
  }

  public static void StartTickInfoToC(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddTick(FlatBufferBuilder builder, int Tick) { builder.AddInt(0, Tick, 0); }
  public static void AddPlayerInputs(FlatBufferBuilder builder, VectorOffset PlayerInputsOffset) { builder.AddOffset(1, PlayerInputsOffset.Value, 0); }
  public static VectorOffset CreatePlayerInputsVector(FlatBufferBuilder builder, Offset<FBS.PlayerInputData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartPlayerInputsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<TickInfoToC> EndTickInfoToC(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<TickInfoToC>(o);
  }
};


}
