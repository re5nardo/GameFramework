// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_JOINLOBBYTOCDATA_H_
#define FLATBUFFERS_GENERATED_JOINLOBBYTOCDATA_H_

#include "flatbuffers/flatbuffers.h"

struct JoinLobbyToC_Data;

struct JoinLobbyToC_Data FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_RESULT = 4
  };
  int32_t Result() const { return GetField<int32_t>(VT_RESULT, 0); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<int32_t>(verifier, VT_RESULT) &&
           verifier.EndTable();
  }
};

struct JoinLobbyToC_DataBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_Result(int32_t Result) { fbb_.AddElement<int32_t>(JoinLobbyToC_Data::VT_RESULT, Result, 0); }
  JoinLobbyToC_DataBuilder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  JoinLobbyToC_DataBuilder &operator=(const JoinLobbyToC_DataBuilder &);
  flatbuffers::Offset<JoinLobbyToC_Data> Finish() {
    auto o = flatbuffers::Offset<JoinLobbyToC_Data>(fbb_.EndTable(start_, 1));
    return o;
  }
};

inline flatbuffers::Offset<JoinLobbyToC_Data> CreateJoinLobbyToC_Data(flatbuffers::FlatBufferBuilder &_fbb,
    int32_t Result = 0) {
  JoinLobbyToC_DataBuilder builder_(_fbb);
  builder_.add_Result(Result);
  return builder_.Finish();
}

#endif  // FLATBUFFERS_GENERATED_JOINLOBBYTOCDATA_H_
