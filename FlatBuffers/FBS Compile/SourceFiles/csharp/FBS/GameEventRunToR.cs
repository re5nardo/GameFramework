// automatically generated by the FlatBuffers compiler, do not modify

namespace FBS
{

using System;
using FlatBuffers;

public sealed class GameEventRunToR : Table {
  public static GameEventRunToR GetRootAsGameEventRunToR(ByteBuffer _bb) { return GetRootAsGameEventRunToR(_bb, new GameEventRunToR()); }
  public static GameEventRunToR GetRootAsGameEventRunToR(ByteBuffer _bb, GameEventRunToR obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public GameEventRunToR __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int PlayerIndex { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public FBS.Data.Vector3 Dest { get { return GetDest(new FBS.Data.Vector3()); } }
  public FBS.Data.Vector3 GetDest(FBS.Data.Vector3 obj) { int o = __offset(6); return o != 0 ? obj.__init(o + bb_pos, bb) : null; }

  public static void StartGameEventRunToR(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPlayerIndex(FlatBufferBuilder builder, int PlayerIndex) { builder.AddInt(0, PlayerIndex, 0); }
  public static void AddDest(FlatBufferBuilder builder, Offset<FBS.Data.Vector3> DestOffset) { builder.AddStruct(1, DestOffset.Value, 0); }
  public static Offset<GameEventRunToR> EndGameEventRunToR(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GameEventRunToR>(o);
  }
};


}
