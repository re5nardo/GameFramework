// automatically generated by the FlatBuffers compiler, do not modify

namespace FBS
{

using System;
using FlatBuffers;

public sealed class PreparationStateToC : Table {
  public static PreparationStateToC GetRootAsPreparationStateToC(ByteBuffer _bb) { return GetRootAsPreparationStateToC(_bb, new PreparationStateToC()); }
  public static PreparationStateToC GetRootAsPreparationStateToC(ByteBuffer _bb, PreparationStateToC obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public PreparationStateToC __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int PlayerIndex { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public float State { get { int o = __offset(6); return o != 0 ? bb.GetFloat(o + bb_pos) : (float)0.0f; } }

  public static Offset<PreparationStateToC> CreatePreparationStateToC(FlatBufferBuilder builder,
      int PlayerIndex = 0,
      float State = 0.0f) {
    builder.StartObject(2);
    PreparationStateToC.AddState(builder, State);
    PreparationStateToC.AddPlayerIndex(builder, PlayerIndex);
    return PreparationStateToC.EndPreparationStateToC(builder);
  }

  public static void StartPreparationStateToC(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddPlayerIndex(FlatBufferBuilder builder, int PlayerIndex) { builder.AddInt(0, PlayerIndex, 0); }
  public static void AddState(FlatBufferBuilder builder, float State) { builder.AddFloat(1, State, 0.0f); }
  public static Offset<PreparationStateToC> EndPreparationStateToC(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PreparationStateToC>(o);
  }
};


}
