// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_CHARACTERSTATUSCHANGE_FBS_GAMEEVENT_H_
#define FLATBUFFERS_GENERATED_CHARACTERSTATUSCHANGE_FBS_GAMEEVENT_H_

#include "flatbuffers/flatbuffers.h"

namespace FBS {
namespace GameEvent {

struct CharacterStatusChange;

struct CharacterStatusChange FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_ENTITYID = 4,
    VT_STATUSFIELD = 6,
    VT_REASON = 8,
    VT_VALUE = 10
  };
  int32_t EntityID() const { return GetField<int32_t>(VT_ENTITYID, 0); }
  const flatbuffers::String *StatusField() const { return GetPointer<const flatbuffers::String *>(VT_STATUSFIELD); }
  const flatbuffers::String *Reason() const { return GetPointer<const flatbuffers::String *>(VT_REASON); }
  float Value() const { return GetField<float>(VT_VALUE, 0.0f); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<int32_t>(verifier, VT_ENTITYID) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, VT_STATUSFIELD) &&
           verifier.Verify(StatusField()) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, VT_REASON) &&
           verifier.Verify(Reason()) &&
           VerifyField<float>(verifier, VT_VALUE) &&
           verifier.EndTable();
  }
};

struct CharacterStatusChangeBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_EntityID(int32_t EntityID) { fbb_.AddElement<int32_t>(CharacterStatusChange::VT_ENTITYID, EntityID, 0); }
  void add_StatusField(flatbuffers::Offset<flatbuffers::String> StatusField) { fbb_.AddOffset(CharacterStatusChange::VT_STATUSFIELD, StatusField); }
  void add_Reason(flatbuffers::Offset<flatbuffers::String> Reason) { fbb_.AddOffset(CharacterStatusChange::VT_REASON, Reason); }
  void add_Value(float Value) { fbb_.AddElement<float>(CharacterStatusChange::VT_VALUE, Value, 0.0f); }
  CharacterStatusChangeBuilder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  CharacterStatusChangeBuilder &operator=(const CharacterStatusChangeBuilder &);
  flatbuffers::Offset<CharacterStatusChange> Finish() {
    auto o = flatbuffers::Offset<CharacterStatusChange>(fbb_.EndTable(start_, 4));
    return o;
  }
};

inline flatbuffers::Offset<CharacterStatusChange> CreateCharacterStatusChange(flatbuffers::FlatBufferBuilder &_fbb,
    int32_t EntityID = 0,
    flatbuffers::Offset<flatbuffers::String> StatusField = 0,
    flatbuffers::Offset<flatbuffers::String> Reason = 0,
    float Value = 0.0f) {
  CharacterStatusChangeBuilder builder_(_fbb);
  builder_.add_Value(Value);
  builder_.add_Reason(Reason);
  builder_.add_StatusField(StatusField);
  builder_.add_EntityID(EntityID);
  return builder_.Finish();
}

inline flatbuffers::Offset<CharacterStatusChange> CreateCharacterStatusChangeDirect(flatbuffers::FlatBufferBuilder &_fbb,
    int32_t EntityID = 0,
    const char *StatusField = nullptr,
    const char *Reason = nullptr,
    float Value = 0.0f) {
  return CreateCharacterStatusChange(_fbb, EntityID, StatusField ? _fbb.CreateString(StatusField) : 0, Reason ? _fbb.CreateString(Reason) : 0, Value);
}

}  // namespace GameEvent
}  // namespace FBS

#endif  // FLATBUFFERS_GENERATED_CHARACTERSTATUSCHANGE_FBS_GAMEEVENT_H_
