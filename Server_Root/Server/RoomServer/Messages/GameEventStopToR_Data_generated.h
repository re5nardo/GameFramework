// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_GAMEEVENTSTOPTORDATA_H_
#define FLATBUFFERS_GENERATED_GAMEEVENTSTOPTORDATA_H_

#include "flatbuffers/flatbuffers.h"

#include "FBSData_generated.h"

struct GameEventStopToR_Data;

struct GameEventStopToR_Data FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_PLAYERINDEX = 4,
    VT_POS = 6
  };
  int32_t PlayerIndex() const { return GetField<int32_t>(VT_PLAYERINDEX, 0); }
  const FBSData::Vector3 *Pos() const { return GetStruct<const FBSData::Vector3 *>(VT_POS); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<int32_t>(verifier, VT_PLAYERINDEX) &&
           VerifyField<FBSData::Vector3>(verifier, VT_POS) &&
           verifier.EndTable();
  }
};

struct GameEventStopToR_DataBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_PlayerIndex(int32_t PlayerIndex) { fbb_.AddElement<int32_t>(GameEventStopToR_Data::VT_PLAYERINDEX, PlayerIndex, 0); }
  void add_Pos(const FBSData::Vector3 *Pos) { fbb_.AddStruct(GameEventStopToR_Data::VT_POS, Pos); }
  GameEventStopToR_DataBuilder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  GameEventStopToR_DataBuilder &operator=(const GameEventStopToR_DataBuilder &);
  flatbuffers::Offset<GameEventStopToR_Data> Finish() {
    auto o = flatbuffers::Offset<GameEventStopToR_Data>(fbb_.EndTable(start_, 2));
    return o;
  }
};

inline flatbuffers::Offset<GameEventStopToR_Data> CreateGameEventStopToR_Data(flatbuffers::FlatBufferBuilder &_fbb,
    int32_t PlayerIndex = 0,
    const FBSData::Vector3 *Pos = 0) {
  GameEventStopToR_DataBuilder builder_(_fbb);
  builder_.add_Pos(Pos);
  builder_.add_PlayerIndex(PlayerIndex);
  return builder_.Finish();
}

#endif  // FLATBUFFERS_GENERATED_GAMEEVENTSTOPTORDATA_H_
